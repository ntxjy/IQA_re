# general settings
name: QualiCLIP_FLIVE
model_type: GeneralIQAModel
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 123

# dataset and data loader settings
datasets:
  train:
    name: koniq10k
    type: GeneralNRDataset
    dataroot_target: ./datasets/FLIVE_Database/database
    meta_info_file: ./datasets/meta_info/meta_info_FLIVEDataset.csv
    split_file: ./datasets/meta_info/flive_official.pkl
    mos_range: [1, 100]
    lower_better: false 
    mos_normalize: true

    augment:
      random_arp_resize: [384, 416]   # random aspect ratio preserving resize, following TOPIQ
      hflip: true
      random_crop: 384 
    img_range: 1

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 4
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: FLIVE
    phase: test
    type: GeneralNRDataset
    dataroot_target: ./datasets/FLIVE_Database/database
    meta_info_file: ./datasets/meta_info/meta_info_FLIVEDataset.csv
    split_file: ./datasets/meta_info/flive_official.pkl
    mos_range: [1, 100]
    lower_better: false
    mos_normalize: true

    num_worker_per_gpu: 4
    batch_size_per_gpu: 1  # must be 1 as images have different sizes

# network structures
network:
  type: QualiCLIP
  model_type: qualiclip+
  backbone: RN50
  n_ctx: 16
  ctx_init: ""
  prompt_specific_ctx: true
  pretrained: false
  pos_embedding: false

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  optim:
    type: Adam 
    lr: !!float 2e-3
  
  scheduler:
    type: CosineAnnealingLR
    T_max: 50 
    eta_min: 0

  total_iter: 2000000
  total_epoch: 50 
  warmup_iter: -1  # no warm up

  # losses
  mos_loss_opt:
    type: MSELoss
    loss_weight: !!float 1.0

  metric_loss_opt:
    type: PLCCLoss
    loss_weight: !!float 1.0

# validation settings
val:
  val_freq: !!float 30000
  save_img: false
  pbar: true

  key_metric: srcc # if this metric improve, update all metrics. If not specified, each best metric results will be updated separately
  metrics:
    srcc:
      type: calculate_srcc

    plcc:
      type: calculate_plcc

# logging settings
logger:
  print_freq: 100
  save_latest_freq: !!float 1e3 
  log_imgs_freq: 1000
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500

find_unused_parameters: True
